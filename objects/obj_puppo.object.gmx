<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_puppo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>pnt_meme</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
event_inherited();
max_hp = 300;
hp = max_hp;
movespeed = 1;
attack = 1;
attack_cooldown = room_speed * 0.1;
attack_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt;= 0) instance_destroy();

// Attack Enemy
if ( instance_exists(pnt_meme_bad) and distance_to_object( instance_nearest(x, y, pnt_meme_bad) ) &lt;= sprite_width - 64)
{
   image_speed = 0.4;
   
   if (attack_timer &lt;= 0)
   {
      enemy = instance_nearest(x, y, pnt_meme_bad);
      enemy.hp -= attack;
   
      attack_timer = attack_cooldown;
   }
   else
      attack_timer--;
}
else if (instance_exists(obj_spawner_enemy) and distance_to_object(obj_spawner_enemy) &lt;= sprite_width - 64)
{
   image_speed = 0.4;
   
   if (attack_timer &lt;= 0)
   {
      if (obj_spawner_enemy.hp - 1 &gt; 0)
         obj_spawner_enemy.hp--;
      else
         with (obj_spawner_enemy) instance_destroy();
   }
   else
      attack_timer--;
} 
else
{
   image_speed = 0;
   image_index = 0;
   
   x += movespeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display Health
draw_self();

draw_healthbar(x - 23, y - sprite_height / 2 - 12, 
               x + 23, y - sprite_height / 2 - 4, 
               100 * hp / max_hp, 
               c_black, c_red, c_green, 0, false, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
